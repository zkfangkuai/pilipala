[
    {
        "name": "std",
        "trans": [
            "standard标准"
        ]
    },
 {
        "name": "iostream",
        "trans": [
            "输入输出流头文件"
        ]
    },  
    {
        "name": "main()",
        "trans": [
            "主函数"
        ]
    },
   {
        "name": "cout",
        "trans": [
            "cout标准输出，全称是std::cout"
        ]
    },
   {
        "name": "cin",
        "trans": [
            "cin标准输入，全称是std::cin"
        ]
    },
    {
        "name": "iomanip",
        "trans": [
            "头文件，io代表输入输出，manip是manipulator（操纵器）的缩写"
        ]
    },
    {
        "name": "auto",
        "trans": [
            "自动，automatic，自动声明循环变量类型"
        ]
    },
    {
        "name": "bool",
        "trans": [
            "布尔类型"
        ]
    },
    {
        "name": "break",
        "trans": [
            "中断、跳出"
        ]
    },
    {
        "name": "case",
        "trans": [
            "条件，用于 switch 语句中，用于判断不同的条件类型"
        ]
    },
    {
        "name": "catch",
        "trans": [
            "捕捉，和 try 语句一起用于异常处理"
        ]
    },
    {
        "name": "char",
        "trans": [
            "字符，character类型。"
        ]
    },
    {
        "name": "class",
        "trans": [
            "类"
        ]
    },
    {
        "name": "const",
        "trans": [
            "常量的，constant"
        ]
    },
    {
        "name": "continue",
        "trans": [
            "continue作用是结束本次循环，即跳过循环体中下面尚未执行的语句，然后进行下一次是否执行循环的判定。"
        ]
    },
    {
        "name": "default",
        "trans": [
            "默认、缺省"
        ]
    },
    {
        "name": "delete",
        "trans": [
            "删除"
        ]
    },
    {
        "name": "do",
        "trans": [
            "执行，x-while 是一类循环结构"
        ]
    },
    {
        "name": "else",
        "trans": [
            "否则。紧跟在 if 后面，用于对 if 不成立的情况的选择"
        ]
    },
    {
        "name": "enum",
        "trans": [
            "枚举"
        ]
    },
    {
        "name": "false",
        "trans": [
            "假的"
        ]
    },
    {
        "name": "float",
        "trans": [
            "浮点数"
        ]
    },
    {
        "name": "for",
        "trans": [
            "for循环"
        ]
    },
    {
        "name": "if",
        "trans": [
            "如果"
        ]
    },
    {
        "name": "int",
        "trans": [
            "整型，integer"
        ]
    },
    {
        "name": "long␣long",
        "trans": [
            "长整型"
        ]
    },
    {
        "name": "true",
        "trans": [
            "真的"
        ]
    },
    {
        "name": "namespace",
        "trans": [
            "命名空间"
        ]
    },
    {
        "name": "new",
        "trans": [
            "新建一个对象"
        ]
    },
    {
        "name": "operator",
        "trans": [
            "重载()操作符"
        ]
    },
    {
        "name": "return",
        "trans": [
            "返回"
        ]
    },
    {
        "name": "short",
        "trans": [
            "短整型，short integer"
        ]
    },
    {
        "name": "signed",
        "trans": [
            "有符号"
        ]
    },
    {
        "name": "sizeof",
        "trans": [
            "……的大小；获得该数据类型占用的字节数"
        ]
    },
    {
        "name": "struct",
        "trans": [
            "结构"
        ]
    },
    {
        "name": "switch",
        "trans": [
            "多分支语句，经常和case一起运用"
        ]
    },
    {
        "name": "typedef",
        "trans": [
            "类型定义，type define"
        ]
    },
    {
        "name": "union",
        "trans": [
            "联合"
        ]
    },
    {
        "name": "unsigned",
        "trans": [
            "无符号"
        ]
    },
    {
        "name": "using",
        "trans": [
            "使用"
        ]
    },
    {
        "name": "void",
        "trans": [
            "空的"
        ]
    },
  {
        "name": "wchar_t",
        "trans": [
            "宽字符类型"
        ]
    },
   {
        "name": "include",
        "trans": [
            "include是C++ 的编译预处理命令,它的作用包含对应的文件"
        ]
    },
{
        "name": "sqrt()",
        "trans": [
            "开平方"
        ]
    },
{
        "name": "pow()",
        "trans": [
            "幂运算"
        ]
    },
{
        "name": "log()",
        "trans": [
            "对数运算"
        ]
    },
{
        "name": "abs()",
        "trans": [
            "求绝对值"
        ]
    },
{
        "name": "ceil()",
        "trans": [
            "向上取整"
        ]
    },
{
        "name": "floor()",
        "trans": [
            "向下取整"
        ]
    },
{
        "name": "rand()",
        "trans": [
            "产生随机数"
        ]
    },
{
        "name": "puts()",
        "trans": [
            "puts()函数用来向标准输出设备(屏幕)写字符串并换行"
        ]
    },
{
        "name": "gets()",
        "trans": [
            "gets() 函数从标准输入读取字符并存储它们"
        ]
    },
{
        "name": "strcat()",
        "trans": [
            "字符串连接"
        ]
    },
{
        "name": "strcpy()",
        "trans": [
            "字符串复制"
        ]
    },
{
        "name": "strcmp()",
        "trans": [
            "字符串比较"
        ]
    },
{
        "name": "strlen()",
        "trans": [
            "求字符串长度"
        ]
    },
{
        "name": "memset()",
        "trans": [
            "数组初始化"
        ]
    },
{
        "name": "find()",
        "trans": [
            "查找子串"
        ]
    },
{
        "name": "replace()",
        "trans": [
            "替换子串"
        ]
    },
  {
        "name": "fstream",
        "trans": [
            "头文件，fstream 在C++语言中是 class（“类”） 的名字。 意思：“标准文件输入输出流class”"
        ]
    },
 {
        "name": "printf()",
        "trans": [
            "printf()是C语言标准库函数,用于将格式化后的字符串输出到标准输出"
        ]
    },
    {
        "name": "scanf()",
        "trans": [
            "scanf()是C语言中的一个输入函数,属于格式输入函数"
        ]
    },
    {
        "name": "push_back()",
        "trans": [
            "向末尾插入"
        ]
    },
 {
        "name": "size()",
        "trans": [
            "尺寸；获取向量的大小"
        ]
    },

    {
        "name": "begin()",
        "trans": [
            "开始;返回一个指向向量开头的迭代器"
        ]
    },
    {
        "name": "sort()",
        "trans": [
            "排序"
        ]
    },
 {
        "name": "getchar()",
        "trans": [
            "从屏幕得到一个字符"
        ]
    },
{
        "name": "putchar()",
        "trans": [
            "输出字符到屏幕"
        ]
    },
{
        "name": "fscanf()",
        "trans": [
            "从磁盘格式输入"
        ]
    },
{
        "name": "push()",
        "trans": [
            "队列/栈）加入数据"
        ]
    },
{
        "name": "pop()",
        "trans": [
            "清除元素"
        ]
    },
{
        "name": "front()",
        "trans": [
            "获取队首/栈顶元素"
        ]
    },
{
        "name": "cmath",
        "trans": [
            "数学库"
        ]
    },
{
        "name": "length()",
        "trans": [
            "返回字符串的长度"
        ]
    },
{
        "name": "compare()",
        "trans": [
            "比较字符串相等"
        ]
    },
{
        "name": "swap()",
        "trans": [
            "交换两个字符"
        ]
    },
{
        "name": "copy()",
        "trans": [
            "赋值字符串"
        ]
    },
{
        "name": "substr()",
        "trans": [
            "获取子串位置（使用kmp算法）"
        ]
    },
{
       "name": "getline()",
        "trans": [
            "输入字符串"
        ]
    },
{
        "name": "data()",
        "trans": [
            "将字符串以字符数组形式返回"
        ]
    },
{
        "name": "c_str()",
        "trans": [
            "将字符串以 C - string 形式返回"
        ]
    },
{
        "name": "insert()",
        "trans": [
            "插入字符"
        ]
    },
{
        "name": "erase()",
        "trans": [
            "删除字符"
        ]
    },
{
        "name": "clear()",
        "trans": [
            "移除全部字符"
        ]
    },
{
        "name": "append()",
        "trans": [
            "添加字符"
        ]
    },

{
        "name": "string",
        "trans": [
            "字符串类型库"
        ]
    },
{
        "name": "min()",
        "trans": [
            "最小值"
        ]
    },
{
        "name": "max()",
        "trans": [
            "最大值"
        ]
    },
{
        "name": "make_pair()",
        "trans": [
            "生成对数"
        ]
    },
{
        "name": "end()",
        "trans": [
            "结束;返回一个指向向量结尾的迭代器"
        ]
    }

   
]